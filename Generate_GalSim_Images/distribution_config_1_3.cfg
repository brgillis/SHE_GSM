# This is a sample configuration script for gen_galsim_images.py
# It supports comment lines which begin with a # and no other form of comments
# Empty lines can be used for added whitespace

# Lines in this file are given descriptive comments above their entries as
# appropriate.

# Version number: Changed only after major updates to the script
# which require configuration file format changes. The user shouldn't
# touch this.
config_version_number:     1.3

# Mode: 'simple' - one value for each parameter (and a very different-looking config file)
# 'distribution' - randomly draw values for each parameter
mode:                      distribution

# Output folder: This supports absolute or relative locations where images should be
# output. The below is an example of a relative location, which will output them in
# a folder in the same folder as the script is being run from.
output_folder:             output

# A base for the names of separate folders created to hold images created by separate
# parallel threads in the script. This is done so that if a very large number of files
# are created, the impact on the directory structure will be lessened.
# For a name base "thread", the folders will have names such as "thread_0"
thread_folder_name_base:   thread

# The base for names of output images. For a name base "sample_image", the files will
# have names such as "sample_image_0"
output_file_name_base:     sample_image

# Number of parallel threads the process will be split up into.
# Note: Total number of files that will be created is num_parallel_threads * num_files_to_generate
num_parallel_threads:      1

num_files_to_generate:     1

# Image 'grid' or image 'cube'
grid_or_cube:              grid

# For cube, one value for total number of images per file
# For grid, two values. One for number per row, one for number per column
num_images_per_file:       100 100

# Pixelization scale in arcsec/pixel (how much the galaxy+psf image is pixelized)
pixel_scale:               0.1

# Sampling scale in arcsec/pixel (the size of the pixels in the output image)
sample_scale:              0.05

# Size of each galaxy's postage stamp in pixels (use sample_scale to convert to arcsec)
stamp_size_x_pix:          200
stamp_size_y_pix:          200

# Padding between images on grid. In cube mode, these aren't used, but they still must be present
stamp_padding_x_pix:       1
stamp_padding_y_pix:       1

# Type of variable used for image:
# 16I - 16-bit integers (glitched in current version of galsim)
# 32I - 32-bit integers (glitched in current version of galsim)
# 32F - 32-bit floats
# 64F - 64-bit floats
image_type:                32F

# What the shear and shape parameters actually mean
# 'shear' - param 1 is g1, param 2 is g2
# 'ellipticity' - param 1 is e1, param 2 is e2
# 'shear-angle' - param 1 is g (sqrt(g1^2+g2^2)), param 2 is beta in degrees
# 'ellipticity-angle' - param 1 is e (sqrt(e1^2+e2^2)), param 2 is beta in degrees
shear_type:                shear-angle

# Whether the galaxy's 'intensity' is defined through S/N (using a circular aperture
# approximation) or flux
flux_or_S/N:               S/N

# Adjustment for the random seeding. Set this to a different value each time you run
# the script to get entirely different images each time.
Init_random_seed_factor:   0

# Set to 0 and error will be applied as normal
# Set to 1 and no noise (not even Poisson) will be present on the images
Suppress_noise:            1

# Set to 1 and implementations will be made for shape noise cancellation (to limit noise in tests)
# Otherwise, set to 0 to generate values for galaxy shapes directly from distributions
Shape_noise_cancellation:  1

# The following lines each define a distribution for random values
# The first in each batch of three determines whether the parameters is randomly generated
# once per file ('file') or once for each postage stamp ('stamp')
# The second defines the type of distribution that will be drawn from, and the third line
# gives the parameters specifying the distribution. Further documentation on the allowed
# distribution types and their parameters can be found in the script, in the "get_dist"
# function.
# Sigma for the PSF in arcsec (assuming it's Gaussian)
psf_stddev_arcsec_dist_mode:             File
psf_stddev_arcsec_dist_type:         LogNormal-Mean
psf_stddev_arcsec_dist_params:        -0.77 0.005

# Shape parameters for the PSF
psf_shape_1_dist_mode:	                 File
psf_shape_1_dist_type:	            Contracted_Rayleigh
psf_shape_1_dist_params:               0.01 0.9 4
psf_shape_2_dist_mode:	                 File
psf_shape_2_dist_type:	                Uniform
psf_shape_2_dist_params:                 0  180

# Sigma for the galaxy in arcsec (assuming it's Gaussian)
galaxy_sigma_arcsec_dist_mode:	        Stamp
galaxy_sigma_arcsec_dist_type:       LogNormal-Peak
galaxy_sigma_arcsec_dist_params:       -0.5 0.15

# S/N for the galaxy
galaxy_flux_or_S/N_dist_mode:           Stamp
galaxy_flux_or_S/N_dist_type:        LogNormal-Mean
galaxy_flux_or_S/N_dist_params:        2.301 0.1

# Shape parameters for the galaxy
galaxy_shape_1_dist_mode:	        Stamp
galaxy_shape_1_dist_type:	    Contracted_Rayleigh
galaxy_shape_1_dist_params:           0.25 0.9 4
galaxy_shape_2_dist_mode:	        Stamp
galaxy_shape_2_dist_type:	       Uniform
galaxy_shape_2_dist_params:             0  180

# Shear parameters for the galaxy
galaxy_shear_1_dist_mode:	         File
galaxy_shear_1_dist_type:	    Contracted_Rayleigh
galaxy_shear_1_dist_params:            0.01 0.9 4
galaxy_shear_2_dist_mode:	         File
galaxy_shear_2_dist_type:	       Uniform
galaxy_shear_2_dist_params:             0 180

# Sky level value in ADU/arcsec^2, which we assume as been presubtracted off of the image
sky_level_subtracted_dist_mode:	         File
sky_level_subtracted_dist_type:         Fixed
sky_level_subtracted_dist_params:        100

# Sky level value in ADU/arcsec^2 which we'll add onto the image
sky_level_unsubtracted_dist_mode:        File
sky_level_unsubtracted_dist_type:       Fixed
sky_level_unsubtracted_dist_params:       0

# Read noise in counts/pixel
Read_noise_dist_dist_mode:	             File
Read_noise_dist_type:                   Fixed
Read_noise_dist_params:                  0.3

# Gain in counts/ADU
gain_dist_dist_mode:	                 File
gain_dist_type:                         Fixed
gain_dist_params:                        1.7
